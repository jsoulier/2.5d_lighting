#version 450

#include "config.hpp"

layout(local_size_x = THREADS_3D, local_size_y = THREADS_3D, local_size_z = THREADS_3D) in;
layout(set = 1, binding = 0, rgba32f) uniform image3D inOutImage;
layout(set = 2, binding = 0) uniform uniformValue
{
    float value;
};

void main()
{
    ivec3 size = imageSize(inOutImage);
    ivec3 id = ivec3(gl_GlobalInvocationID);
    /* NOTE: we don't write to borders here since regular dispatches don't either */
    if (any(greaterThanEqual(id, size - 1)) || any(lessThanEqual(id, ivec3(0))))
    {
        return;
    }
    float current = imageLoad(inOutImage, id).x;
    imageStore(inOutImage, id, vec4(current + value));
}